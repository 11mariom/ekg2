Index: old.c
===================================================================
--- old.c	(wersja 4164)
+++ old.c	(kopia robocza)
@@ -946,7 +946,7 @@
 
 	if (ch > 127 && ch < 160 &&
 #if USE_UNICODE
-		!config_use_unicode &&
+		0 &&
 #endif
 		config_use_iso)
 	{
@@ -1165,11 +1165,10 @@
 				if (!fixup && (l->margin_left != -1 && x >= l->margin_left))
 					fixup = l->margin_left + config_margin_size;
 #if USE_UNICODE
-				if (config_use_unicode) {
-					mvwaddnwstr(n->window, cur_y, cur_x - fixup, &ch, 1);
-				} else
+				mvwaddnwstr(n->window, cur_y, cur_x - fixup, &ch, 1);
+#else
+				mvwaddch(n->window, cur_y, cur_x - fixup, ch);
 #endif
-					mvwaddch(n->window, cur_y, cur_x - fixup, ch);
 			}
 		}
 
@@ -1182,11 +1181,10 @@
 			if (!fixup && (l->margin_left != -1 && (x + l->prompt_len) >= l->margin_left))
 				fixup = l->margin_left + config_margin_size;
 #if USE_UNICODE
-			if (config_use_unicode) {
-				mvwaddnwstr(n->window, cur_y, cur_x - fixup, &ch, 1);
-			} else
+			mvwaddnwstr(n->window, cur_y, cur_x - fixup, &ch, 1);
+#else
+			mvwaddch(n->window, cur_y, cur_x - fixup, ch);
 #endif
-				mvwaddch(n->window, cur_y, cur_x - fixup, ch);
 		}
 	}
 
@@ -1858,7 +1856,7 @@
 #ifdef HAVE_NCURSES_ULC
 	if (!config_use_iso
 #if USE_UNICODE
-			&& !config_use_unicode
+			&& 0
 #endif
 			)
 		use_legacy_coding(2);
@@ -2102,11 +2100,10 @@
 	wattrset(w, attr);
 
 #if USE_UNICODE
-	if (config_use_unicode)
-		mvwaddnwstr(w, y, x, &ch, 1);
-	else
+	mvwaddnwstr(w, y, x, &ch, 1);
+#else
+	mvwaddch(w, y, x, ch);
 #endif
-		mvwaddch(w, y, x, ch);
 	wattrset(w, A_NORMAL);
 }
 
@@ -2122,13 +2119,11 @@
  */
 static int ekg_getch(int meta, unsigned int *ch) {
 #if USE_UNICODE
-	int retcode;
-	if (config_use_unicode) {
-		retcode = wget_wch(input, ch);
-		if (retcode == ERR) *ch = ERR;
-	} else retcode = 
+	int retcode = wget_wch(input, ch);
+	if (retcode == ERR) *ch = ERR;
+#else
+	*ch = wgetch(input);
 #endif
-		*ch = wgetch(input);
 
 	/* Debian screen incomplete terminfo workaround */
 
@@ -2258,11 +2253,10 @@
 
 static inline int isalpha_locale(int x) {
 #ifdef USE_UNICODE
-	if (config_use_unicode)
-		return (isalpha(x) || (x > 0x7f));	/* moze i nie najlepsze wyjscie... */
-	else
+	return (isalpha(x) || (x > 0x7f));	/* moze i nie najlepsze wyjscie... */
+#else
+	return isalpha_pl(x);
 #endif
-		return isalpha_pl(x);
 }
 
 /* 
@@ -2419,7 +2413,7 @@
 		/* const */size_t linelen	= xwcslen(ncurses_line);
 
 		if (ncurses_current->prompt)
-#ifdef USE_UNICODE /* XXX: should we check config_use_unicode here? */
+#ifdef USE_UNICODE
 			mvwaddwstr(input, 0, 0, ncurses_current->prompt_real);
 #else
 			mvwaddstr(input, 0, 0, (char *) ncurses_current->prompt_real);
@@ -2594,7 +2588,7 @@
 	} else {
 		if (
 #if USE_UNICODE
-			!config_use_unicode && 
+			0 && 
 #endif
 			ch > KEY_MAX) {
 			
@@ -2604,7 +2598,7 @@
 
 		if (
 #if USE_UNICODE
-			( (config_use_unicode && (tmp == KEY_CODE_YES || ch < 0x100 /* TODO CHECK */)) || !config_use_unicode) &&
+			(((tmp == KEY_CODE_YES || ch < 0x100 /* TODO CHECK */))) &&
 #endif
 			(b = ncurses_binding_map[ch]) && b->action) {
 
@@ -2617,7 +2611,7 @@
 			}
 		} else if (
 #if USE_UNICODE
-				((config_use_unicode && ch != KEY_MOUSE) || (!config_use_unicode && ch < 255)) &&
+				((ch != KEY_MOUSE) || (0 && ch < 255)) &&
 #else
 				ch < 255 && 
 #endif
